<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
		
	<!-- 创建数据源 -->
	<!-- 使用JBoss、WebLogic时使用应用服务器本身提供的数据源。
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/bbt" />
	 -->
	<!-- 导入数据源相关属性信息-->
	<util:properties id="dataSourcesProperties" location="classpath:/primaryKey/databases.properties" />
	<util:list id="encryptPropertyPlaceholderConfigurerLocalArray">
		<ref bean="dataSourcesProperties"/>
	</util:list>
	<bean parent="encryptPropertyPlaceholderConfigurer" p:propertiesArray-ref="encryptPropertyPlaceholderConfigurerLocalArray" p:decryptor-ref="stringStringAESCryptor" >
		<property name="encryptPropertyNames">
			<array>
				<value>datasource.primaryKey.1.jdbc.username</value>
				<value>datasource.primaryKey.1.jdbc.password</value>
				<value>datasource.primaryKey.2.jdbc.username</value>
				<value>datasource.primaryKey.2.jdbc.password</value>
			</array>
		</property>
	</bean>
	
	<bean id="primaryKey1DataSource" parent="abstractDataSource"
		p:url="${datasource.primaryKey.1.jdbc.url}"
		p:username="${datasource.primaryKey.1.jdbc.username}"
		p:password="${datasource.primaryKey.1.jdbc.password}"> 
	    <!-- 配置最大 -->
	    <property name="maxActive" value="${datasource.primaryKey.1.pool.maxActive}" />
	    <!-- 配置初始化大小、最小 -->
	    <property name="initialSize" value="${datasource.primaryKey.1.pool.minIdle}" />
	    <property name="minIdle" value="${datasource.primaryKey.1.pool.minIdle}" />
	</bean>
	
	<bean id="primaryKey2DataSource" parent="abstractDataSource"
		p:url="${datasource.primaryKey.2.jdbc.url}"
		p:username="${datasource.primaryKey.2.jdbc.username}"
		p:password="${datasource.primaryKey.2.jdbc.password}"> 	    
	    <!-- 配置最大 -->
	    <property name="maxActive" value="${datasource.primaryKey.2.pool.maxActive}" />
	    <!-- 配置初始化大小、最小 -->
	    <property name="initialSize" value="${datasource.primaryKey.2.pool.minIdle}" />
	    <property name="minIdle" value="${datasource.primaryKey.2.pool.minIdle}" />
	</bean>
	
	<jdbc:initialize-database enabled="true" data-source="primaryKey1DataSource">
		<jdbc:script separator=";" execution="INIT" location="classpath:/primaryKey/primary_key_1_init.sql"/>
		<jdbc:script separator=";" execution="DESTROY" location="classpath:/primaryKey/primary_key_1_destroy.sql"/>
	</jdbc:initialize-database>
	
	<jdbc:initialize-database enabled="true" data-source="primaryKey2DataSource">
		<jdbc:script separator=";" execution="INIT" location="classpath:/primaryKey/primary_key_2_init.sql"/>
		<jdbc:script separator=";" execution="DESTROY" location="classpath:/primaryKey/primary_key_2_destroy.sql"/>
	</jdbc:initialize-database>
	
	<!-- 步进设置为2是因为使用了两个数据源。其中数据源1和数据源2序列的初始值为连续的，如数据源1的初始值为0，数据源2的初始值为1。
		 序列的实际步进为step * cacheSize。 
	<bean id="primaryKey1Incrementer" class="org.danielli.xultimate.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer" 
		p:step="2" p:cacheSize="100" p:incrementerName="primary_key_sequence_1" p:dataSource-ref="primaryKeyDataSource" />
	<bean id="primaryKey2Incrementer" class="org.danielli.xultimate.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer" 
		p:step="2" p:cacheSize="100" p:incrementerName="primary_key_sequence_2" p:dataSource-ref="primaryKeyDataSource" />
	-->
	
	<!-- 步进设置为2是因为使用了两个数据源。其中数据源1和数据源2表中的初始值为连续的，如数据源1表中的初始值为0，数据源2表中的初始值为1。 -->
	<bean id="primaryKey1Incrementer" class="org.danielli.xultimate.jdbc.support.incrementer.MySQLMaxValueIncrementer" 
		p:step="2" p:cacheSize="20" p:incrementerName="primary_key_table_1" p:columnName="next_id" p:dataSource-ref="primaryKey1DataSource" />
	<bean id="primaryKey2Incrementer" class="org.danielli.xultimate.jdbc.support.incrementer.MySQLMaxValueIncrementer" 
		p:step="2" p:cacheSize="20" p:incrementerName="primary_key_table_2" p:columnName="next_id" p:dataSource-ref="primaryKey2DataSource" />
</beans>
